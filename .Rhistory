write.csv(banner_trend, "banner_trend_byweek.csv")
write.csv(banner_trend, "dataset\\banner_trend_byweek.csv")
banner_trend = sqldf("select sum(QLI), YEAR_OF_WEEK,,WEEK_OF_YEAR,MONTH_OF_YEAR
,IS_CHRISTMAS
,LAST_1_MONTH_AVG
,LAST_1_MONTH_MID75
,LAST_1_MONTH_MAX
,LAST_1_MONTH_SUM
,LAST_1_MONTH_MID
,LAST_2_MONTH_AVG
,LAST_1_MONTH_MID25
,LAST_2_MONTH_MAX
,LAST_2_MONTH_SUM
,LAST_2_MONTH_MID75
,LAST_2_MONTH_MID
,LAST_2_MONTH_MID25
,LAST_3_MONTH_AVG
,LAST_3_MONTH_MAX
,LAST_1_MONTH_MIN
,LAST_3_MONTH_MID25
,LAST_3_MONTH_SUM
from banner_trend group by YEAR_OF_WEEK,MONTH_OF_YEAR,WEEK_OF_YEAR")
write.csv(banner_trend, "dataset\\banner_trend_byweek.csv")
write.csv(banner_trend, "dataset\\banner_trend_byweek.csv")
banner_trend = sqldf("select sum(QLI), YEAR_OF_WEEK,,WEEK_OF_YEAR,MONTH_OF_YEAR
,IS_CHRISTMAS
,LAST_1_MONTH_AVG
,LAST_1_MONTH_MID75
,LAST_1_MONTH_MAX
,LAST_1_MONTH_SUM
,LAST_1_MONTH_MID
,LAST_2_MONTH_AVG
,LAST_1_MONTH_MID25
,LAST_2_MONTH_MAX
,LAST_2_MONTH_SUM
,LAST_2_MONTH_MID75
,LAST_2_MONTH_MID
,LAST_2_MONTH_MID25
,LAST_3_MONTH_AVG
,LAST_3_MONTH_MAX
,LAST_1_MONTH_MIN
,LAST_3_MONTH_MID25
,LAST_3_MONTH_SUM
from banner_trend group by YEAR_OF_WEEK,MONTH_OF_YEAR,WEEK_OF_YEAR")
write.csv(banner_trend, "dataset\\banner_trend_byweek.csv")
banner_trend = sqldf("select sum(QLI), YEAR_OF_WEEK,WEEK_OF_YEAR,MONTH_OF_YEAR
,IS_CHRISTMAS
,LAST_1_MONTH_AVG
,LAST_1_MONTH_MID75
,LAST_1_MONTH_MAX
,LAST_1_MONTH_SUM
,LAST_1_MONTH_MID
,LAST_2_MONTH_AVG
,LAST_1_MONTH_MID25
,LAST_2_MONTH_MAX
,LAST_2_MONTH_SUM
,LAST_2_MONTH_MID75
,LAST_2_MONTH_MID
,LAST_2_MONTH_MID25
,LAST_3_MONTH_AVG
,LAST_3_MONTH_MAX
,LAST_1_MONTH_MIN
,LAST_3_MONTH_MID25
,LAST_3_MONTH_SUM
from banner_trend group by YEAR_OF_WEEK,MONTH_OF_YEAR,WEEK_OF_YEAR")
write.csv(banner_trend, "dataset\\banner_trend_byweek.csv")
head(banner_group)
head(banner_trend)
head(banner_group)
head(trend)
head(banner_trend)
banner_trend = merge(trend, banner_group, by="REPORT_DATE")
head(banner_trend)
banner_trend = sqldf("select sum(QLI),YEAR_OF_WEEK,WEEK_OF_YEAR,MONTH_OF_YEAR
,IS_CHRISTMAS
,LAST_1_MONTH_AVG
,LAST_1_MONTH_MID75
,LAST_1_MONTH_MAX
,LAST_1_MONTH_SUM
,LAST_1_MONTH_MID
,LAST_2_MONTH_AVG
,LAST_1_MONTH_MID25
,LAST_2_MONTH_MAX
,LAST_2_MONTH_SUM
,LAST_2_MONTH_MID75
,LAST_2_MONTH_MID
,LAST_2_MONTH_MID25
,LAST_3_MONTH_AVG
,LAST_3_MONTH_MAX
,LAST_1_MONTH_MIN
,LAST_3_MONTH_MID25
,LAST_3_MONTH_SUM
from banner_trend group by YEAR_OF_WEEK,MONTH_OF_YEAR,WEEK_OF_YEAR")
write.csv(banner_trend, "dataset\\banner_trend_byweek.csv")
banner_trend = sqldf("select * from (select sum(QLI),YEAR_OF_WEEK,WEEK_OF_YEAR,MONTH_OF_YEAR
,IS_CHRISTMAS
,LAST_1_MONTH_AVG
,LAST_1_MONTH_MID75
,LAST_1_MONTH_MAX
,LAST_1_MONTH_SUM
,LAST_1_MONTH_MID
,LAST_2_MONTH_AVG
,LAST_1_MONTH_MID25
,LAST_2_MONTH_MAX
,LAST_2_MONTH_SUM
,LAST_2_MONTH_MID75
,LAST_2_MONTH_MID
,LAST_2_MONTH_MID25
,LAST_3_MONTH_AVG
,LAST_3_MONTH_MAX
,LAST_1_MONTH_MIN
,LAST_3_MONTH_MID25
,LAST_3_MONTH_SUM
from banner_trend group by YEAR_OF_WEEK,MONTH_OF_YEAR,WEEK_OF_YEAR) order by YEAR_OF_WEEK,MONTH_OF_YEAR,WEEK_OF_YEAR")
banner_trend = sqldf("select * from (select sum(QLI) AS QLI,YEAR_OF_WEEK,WEEK_OF_YEAR,MONTH_OF_YEAR
,IS_CHRISTMAS
,LAST_1_MONTH_AVG
,LAST_1_MONTH_MID75
,LAST_1_MONTH_MAX
,LAST_1_MONTH_SUM
,LAST_1_MONTH_MID
,LAST_2_MONTH_AVG
,LAST_1_MONTH_MID25
,LAST_2_MONTH_MAX
,LAST_2_MONTH_SUM
,LAST_2_MONTH_MID75
,LAST_2_MONTH_MID
,LAST_2_MONTH_MID25
,LAST_3_MONTH_AVG
,LAST_3_MONTH_MAX
,LAST_1_MONTH_MIN
,LAST_3_MONTH_MID25
,LAST_3_MONTH_SUM
from banner_trend group by YEAR_OF_WEEK,MONTH_OF_YEAR,WEEK_OF_YEAR) order by YEAR_OF_WEEK,MONTH_OF_YEAR,WEEK_OF_YEAR")
banner_trend = merge(trend, banner_group, by="REPORT_DATE")
# head(banner_trend)
banner_trend = sqldf("select * from (select sum(QLI) AS QLI,YEAR_OF_WEEK,WEEK_OF_YEAR,MONTH_OF_YEAR
,IS_CHRISTMAS
,LAST_1_MONTH_AVG
,LAST_1_MONTH_MID75
,LAST_1_MONTH_MAX
,LAST_1_MONTH_SUM
,LAST_1_MONTH_MID
,LAST_2_MONTH_AVG
,LAST_1_MONTH_MID25
,LAST_2_MONTH_MAX
,LAST_2_MONTH_SUM
,LAST_2_MONTH_MID75
,LAST_2_MONTH_MID
,LAST_2_MONTH_MID25
,LAST_3_MONTH_AVG
,LAST_3_MONTH_MAX
,LAST_1_MONTH_MIN
,LAST_3_MONTH_MID25
,LAST_3_MONTH_SUM
from banner_trend group by YEAR_OF_WEEK,MONTH_OF_YEAR,WEEK_OF_YEAR) order by YEAR_OF_WEEK,MONTH_OF_YEAR,WEEK_OF_YEAR")
write.csv(banner_trend, "dataset\\banner_trend_byweek.csv")
write.csv(banner_trend, "dataset\\banner_trend_byweek.csv")
help(ts)
head(banner_trend)
head(banner_trend, 1)
banner_trend[-1,]
head(banner_trend, 1)
banner_trend = banner_trend[-1,]
head(banner_trend, 1)
# 采用随机森林方式处理
set.seed(42)
trainIndex = createDataPartition(banner_trend$QLI,
p=0.8, list=FALSE,times=1)
train = banner_trend[trainIndex,]
test = banner_trend[-trainIndex,]
rf = randomForest(QLI~., data=train,mtry=3,
importance=TRUE, na.action=na.omit)
y_test_Hat = predict(rf, test)
y_test_Hat
banner_trend["REPORT_DATE"]
y_test_Hat = as.vector(y_test_Hat)
# 采用随机森林方式处理
set.seed(42)
trainIndex = createDataPartition(banner_trend$QLI,
p=0.8, list=FALSE,times=1)
train = banner_trend[trainIndex,]
test = banner_trend[-trainIndex,]
rf = randomForest(QLI~., data=train,mtry=3,
importance=TRUE, na.action=na.omit)
y_test_Hat = predict(rf, test)
y_test_Hat
# banner_trend["REPORT_DATE"]
y_test_Hat = as.vector(y_test_Hat)
mse(test[["QLI"]], as.vector(y_test_Hat))
dim(y_test_Hat)
size(y_test_Hat)
length(y_test_Hat)
# 采用时间序列方式处理
ts.raw = test[["QLI"]]
ts.ts = ts(ts.raw, start = c(2016,35), end=c(2018,14),frequency = 52)
ts.ma=arima(ts.ts, order=c(0,1,1), seasonal = list(order=c(0,1,1), period=52))
pred_val = predict(ts.ma, 1)
pred_val
pred_val = predict(ts.ma, 24)
pred_val
test["QLI"][-24:-1]
test["QLI"][-24:-1,:]
test["QLI"][-24:-1]
test["QLI"][-(1:24)]
test["QLI"]
test[["QLI"]][-(1:24)]
test[["QLI"]]
banner_trend[["QLI"]][-(1:24)]
banner_trend[["QLI"]][1:0]
banner_trend[["QLI"]][1:2]
banner_trend[["QLI"]][-(1:2)]
banner_trend[["QLI"]][-(1:24)]
dim(banner_trend)
banner_trend[["QLI"]][0]
banner_trend[["QLI"]][1]
length(banner_trend[["QLI"]][1:100])
length(banner_trend[["QLI"]][1:99])
length(banner_trend[["QLI"]][-(1:99)])
mse(banner_trend[["QLI"]][-(1:99), pred_val)
mse(banner_trend[["QLI"]][-(1:99)], pred_val)
pred_value
pred_val
length(pred_val)
length(pred_val)
dim(pred_val)
pred_val = predict(ts.ma, 24)
dim(pred_val)
length(pred_val)
# 采用时间序列方式处理
ts.raw = test[["QLI"]]
ts.ts = ts(ts.raw, start = c(2016,35), end=c(2018,14),frequency = 52)
ts.ma=arima(ts.ts, order=c(0,1,1), seasonal = list(order=c(0,1,1), period=52))
pred_val = predict(ts.ma, 24)
length(pred_val)
pred_val = predict(ts.ma, 3)
length(pred_val)
predict(ts.ma, 24)
pred_val =predict(ts.ma, 24)
pred_val
mse(banner_trend[["QLI"]][-(1:99)], pred_val)
banner_trend[["QLI"]][-(1:99)
banner_trend[["QLI"]][-(1:99)]
banner_trend[["QLI"]][-(1:99)]
mse(as.vector(banner_trend[["QLI"]][-(1:99)]), as.vector(pred_val))
mse(as.vector(as.vector(pred_val), banner_trend[["QLI"]][-(1:99)]))
mse(as.vector(pred_val, banner_trend[["QLI"]][-(1:99)]))
mse(as.vector(pred_val, banner_trend[["QLI"]][-(1:99)]))
mse(pred_val, banner_trend[["QLI"]][-(1:99)])
mse(test[["QLI"]], as.vector(y_test_Hat))
test[["QLI"]]
test[["QLI2"]]
test[["QLI"]]
pred_val
as.vector(pred_val)
as.vector(pred_val)
help(arima)
as.vector(pre_val)
as.list(pre_val)
pred_val
pred(pred_val)
pred_val.value
plot(ts.ma, n.ahead=24)
pred_val$pred
pred_val$pred$
;
as.vector(pred_val$pred)
mse(banner_trend[["QLI"]][-(1:99)], as.vector(pred_val$pred))
mse(banner_trend[["QLI"]][-(1:99)], as.vector(pred_val$se))
mse(test[["QLI"]], as.vector(y_test_Hat))
ts.ma=arima(ts.ts, order=c(1,1,1), seasonal = list(order=c(0,1,1), period=52))
pred_val =predict(ts.ma, 24)
# pred_val
mse(banner_trend[["QLI"]][-(1:99)], as.vector(pred_val$se))
ts.ma=arima(ts.ts, order=c(1,0,1), seasonal = list(order=c(0,1,1), period=52))
pred_val =predict(ts.ma, 24)
# pred_val
mse(banner_trend[["QLI"]][-(1:99)], as.vector(pred_val$se))
ts.ma=arima(ts.ts, order=c(1,0,1), seasonal = list(order=c(1,1,1), period=52))
pred_val =predict(ts.ma, 24)
# pred_val
mse(banner_trend[["QLI"]][-(1:99)], as.vector(pred_val$se))
ts.ma=arima(ts.ts, order=c(1,0,1), seasonal = list(order=c(1,0,1), period=52))
pred_val =predict(ts.ma, 24)
# pred_val
mse(banner_trend[["QLI"]][-(1:99)], as.vector(pred_val$se))
ts.ma=arima(ts.ts, order=c(1,0,1), seasonal = list(order=c(1,1,0), period=52))
pred_val =predict(ts.ma, 24)
# pred_val
mse(banner_trend[["QLI"]][-(1:99)], as.vector(pred_val$se))
ts.ma=arima(ts.ts, order=c(1,0,1), seasonal = list(order=c(1,0,0), period=52))
pred_val =predict(ts.ma, 24)
# pred_val
mse(banner_trend[["QLI"]][-(1:99)], as.vector(pred_val$se))
ts.ma=arima(ts.ts, order=c(1,1,1), seasonal = list(order=c(1,0,0), period=52))
pred_val =predict(ts.ma, 24)
# pred_val
mse(banner_trend[["QLI"]][-(1:99)], as.vector(pred_val$se))
ts.ma=arima(ts.ts, order=c(1,1,0), seasonal = list(order=c(1,0,0), period=52))
pred_val =predict(ts.ma, 24)
# pred_val
mse(banner_trend[["QLI"]][-(1:99)], as.vector(pred_val$se))
ts.ma=arima(ts.ts, order=c(1,0,0), seasonal = list(order=c(1,0,0), period=52))
pred_val =predict(ts.ma, 24)
# pred_val
mse(banner_trend[["QLI"]][-(1:99)], as.vector(pred_val$se))
ts.ma=arima(ts.ts, order=c(0,1,1), seasonal = list(order=c(1,0,0), period=52))
pred_val =predict(ts.ma, 24)
# pred_val
mse(banner_trend[["QLI"]][-(1:99)], as.vector(pred_val$se))
ts.ma=arima(ts.ts, order=c(0,0,1), seasonal = list(order=c(1,0,0), period=52))
pred_val =predict(ts.ma, 24)
# pred_val
mse(banner_trend[["QLI"]][-(1:99)], as.vector(pred_val$se))
ts.ma=arima(ts.ts, order=c(0,0,1), seasonal = list(order=c(1,1,0), period=52))
pred_val =predict(ts.ma, 24)
# pred_val
mse(banner_trend[["QLI"]][-(1:99)], as.vector(pred_val$se))
ts.ma=arima(ts.ts, order=c(0,0,1), seasonal = list(order=c(1,1,1), period=52))
pred_val =predict(ts.ma, 24)
# pred_val
mse(banner_trend[["QLI"]][-(1:99)], as.vector(pred_val$se))
ts.ma=arima(ts.ts, order=c(0,0,1), seasonal = list(order=c(0,0,1), period=52))
pred_val =predict(ts.ma, 24)
# pred_val
mse(banner_trend[["QLI"]][-(1:99)], as.vector(pred_val$se))
ts.ma=arima(ts.ts, order=c(0,0,1), seasonal = list(order=c(0,1,1), period=52))
pred_val =predict(ts.ma, 24)
# pred_val
mse(banner_trend[["QLI"]][-(1:99)], as.vector(pred_val$se))
ts.ma=arima(ts.ts, order=c(0,0,1), seasonal = list(order=c(0,0,1), period=52))
pred_val =predict(ts.ma, 24)
# pred_val
mse(banner_trend[["QLI"]][-(1:99)], as.vector(pred_val$se))
ts.ma=arima(ts.ts, order=c(0,0,1), seasonal = list(order=c(0,0,0), period=52))
pred_val =predict(ts.ma, 24)
# pred_val
mse(banner_trend[["QLI"]][-(1:99)], as.vector(pred_val$se))
ts.ma=arima(ts.ts, order=c(0,0,1), seasonal = list(order=c(1,0,0), period=52))
pred_val =predict(ts.ma, 24)
# pred_val
mse(banner_trend[["QLI"]][-(1:99)], as.vector(pred_val$se))
ts.ma=arima(ts.ts, order=c(0,0,1), seasonal = list(order=c(1,1,0), period=52))
pred_val =predict(ts.ma, 24)
# pred_val
mse(banner_trend[["QLI"]][-(1:99)], as.vector(pred_val$se))
ts.ma=arima(ts.ts, order=c(0,0,1), seasonal = list(order=c(1,1,1), period=52))
pred_val =predict(ts.ma, 24)
# pred_val
mse(banner_trend[["QLI"]][-(1:99)], as.vector(pred_val$se))
ts.ma=arima(ts.ts, order=c(0,0,1), seasonal = list(order=c(0,0,1), period=52))
pred_val =predict(ts.ma, 24)
# pred_val
mse(banner_trend[["QLI"]][-(1:99)], as.vector(pred_val$se))
ts.ma=arima(ts.ts, order=c(0,0,1), seasonal = list(order=c(0,0,1), period=52))
pred_val =predict(ts.ma, 24)
# pred_val
mse(banner_trend[["QLI"]][-(1:99)], as.vector(pred_val$se))
# 采用lineRegression
library(lineregress)
install.packages("lineregression")
# 线性回归处理
train
# 线性回归处理
head(train,1)
# 线性回归处理
head(train[-1],1)
# 线性回归处理
head(train[,-1],1)
# 线性回归处理
head(train[[,-1]],1)
# 线性回归处理
head(train[[,-1]][[:,:]],1)
# 线性回归处理
head([[train[[,-1]]]],1)
# 线性回归处理
# train_lm = train[[,-1]]
train[,1]
lm.fit(train[, -1], train[,1])
lm.fit(train[,-1], train[,1])
help("lm.fit")
# 线性回归处理
# train_lm = train[[,-1]]
train[,1]
# 线性回归处理
# train_lm = train[[,-1]]
train[,-1]
# 线性回归处理
# train_lm = train[[,-1]]
as.vector(train[,-1])
lm.fit(data.matrix(train[,-1]), train[,1])
lm.fit(data.matrix(train[,-1]), train[,1])
predict(sa.lm, test[,-1])
sa.lm = lm.fit(data.matrix(train[,-1]), train[,1])
predict(sa.lm, test[,-1])
predict(sa.lm, data.matrix(test[,-1]))
data.matrix(test[,-1])
data.matrix(test[,-1])
data.matrix(train[,-1])
sa.lm = lm.fit(data.matrix(train[,-1]), train[,1])
sa.lm = lm.fit(train[,-1], train[,1])
data
sa.lm = lm.fit(data.matrix(train[,-1]), train[,1])
predict(sa.lm, data.matrix(test[,-1]))
sa.lm = lm(QLI~., data=train)
predict(sa.lm, test)
sa.pred = predict(sa.lm, test)
sa.pred
as.vector(sa.pred)
mse(test[["QLI"]], as.vector(sa.pred))
rmse(test[["QLI"]], as.vector(sa.pred))
# pred_val
rmse(banner_trend[["QLI"]][-(1:99)], as.vector(pred_val$se))
rmse(test[["QLI"]], as.vector(y_test_Hat))
names(cluster1)
cluster1 <- data.frame(a=1:5, b=11:15, c=21:25, d=31:35)
names(cluster1)
cluster1
row.names(cluster1) = cluster1$a
cluster1
row.names(cluster1) = cluster1$b
cluster1
row.names(cluster1) = cluster1$c
cluster1
cluster1[c(1,3)]
cluster1 <- data.frame(a=1:5, b=11:15, c=21:25, d=31:35)
#row.names(cluster1) = cluster1$c
cluster1[c(1,3)]
#row.names(cluster1) = cluster1$c
cluster1[1:3,]
#row.names(cluster1) = cluster1$c
cluster1[1:3,1:3]
ts.ts = ts(ts.raw, start = c(2016,35), end=c(2018,14),frequency = 7)
#ts.ts = ts(ts.raw, start = c(2016,35), end=c(2018,14),frequency = 52)
ts.ts = ts(ts.raw, start = c(2016,35),frequency = 7)
ts.ts
ts(1:10, frequency = 1, start = c(1959, 1))
ts(1:10, frequency = 4, start = c(1959, 2))
ts(1:10, frequency = 7, start = c(1959, 2))
ts(1:10, frequency = 12, start = c(1959, 1))
ts(1:10, frequency = 52, start = c(1959, 2))
help(ts)
ts(1:10, frequency = 14, start = c(1959, 2))
data(co2)
co2
ts.ts
ts.ma=arima(ts.ts, order=c(0,0,1), seasonal = list(order=c(0,0,1), period=52))
ts.ts = ts(ts.raw, start = c(2016,35), end=c(2018,14),frequency = 52)
ts.ts
ts.ma=arima(ts.ts, order=c(0,0,1), seasonal = list(order=c(0,0,1), period=52))
ts.ts
# pred_val
rmse(banner_trend[["QLI"]][-(1:99)], as.vector(pred_val$se))
ts.ma=arima(ts.ts, order=c(1,0,0), seasonal = list(order=c(0,0,1), period=52))
pred_val =predict(ts.ma, 24)
# pred_val
rmse(banner_trend[["QLI"]][-(1:99)], as.vector(pred_val$se))
ts.ma=arima(ts.ts, order=c(1,1,0), seasonal = list(order=c(0,0,1), period=52))
pred_val =predict(ts.ma, 24)
# pred_val
rmse(banner_trend[["QLI"]][-(1:99)], as.vector(pred_val$se))
ts.ma=arima(ts.ts, order=c(1,1,1), seasonal = list(order=c(0,0,1), period=52))
pred_val =predict(ts.ma, 24)
# pred_val
rmse(banner_trend[["QLI"]][-(1:99)], as.vector(pred_val$se))
ts.ma=arima(ts.ts, order=c(2,0,0), seasonal = list(order=c(0,0,1), period=52))
pred_val =predict(ts.ma, 24)
# pred_val
rmse(banner_trend[["QLI"]][-(1:99)], as.vector(pred_val$se))
# 线性回归处理
# train_lm = train[[,-1]]
as.vector(train[,-1])
# pred_val
rmse(banner_trend[["QLI"]][-(1:99)], as.vector(pred_val$se))
ts.ma=arima(ts.ts, order=c(2,1,0), seasonal = list(order=c(0,0,1), period=52))
pred_val =predict(ts.ma, 24)
# pred_val
rmse(banner_trend[["QLI"]][-(1:99)], as.vector(pred_val$se))
ts.ma=arima(ts.ts, order=c(2,1,1), seasonal = list(order=c(0,0,1), period=52))
pred_val =predict(ts.ma, 24)
# pred_val
rmse(banner_trend[["QLI"]][-(1:99)], as.vector(pred_val$se))
ts.ma=arima(ts.ts, order=c(2,0,1), seasonal = list(order=c(0,0,1), period=52))
pred_val =predict(ts.ma, 24)
# pred_val
rmse(banner_trend[["QLI"]][-(1:99)], as.vector(pred_val$se))
ts.ma=arima(ts.ts, order=c(2,1,1), seasonal = list(order=c(0,0,1), period=52))
pred_val =predict(ts.ma, 24)
# pred_val
rmse(banner_trend[["QLI"]][-(1:99)], as.vector(pred_val$se))
ts.ma=arima(ts.ts, order=c(2,0,1), seasonal = list(order=c(0,0,1), period=52))
pred_val =predict(ts.ma, 24)
# pred_val
rmse(banner_trend[["QLI"]][-(1:99)], as.vector(pred_val$se))
ts.ma=arima(ts.ts, order=c(2,0,1), seasonal = list(order=c(2,0,1), period=52))
pred_val =predict(ts.ma, 24)
# pred_val
rmse(banner_trend[["QLI"]][-(1:99)], as.vector(pred_val$se))
ts.ma=arima(ts.ts, order=c(2,0,1), seasonal = list(order=c(2,2,1), period=52))
pred_val =predict(ts.ma, 24)
# pred_val
rmse(banner_trend[["QLI"]][-(1:99)], as.vector(pred_val$se))
ts.ma=arima(ts.ts, order=c(2,0,1), seasonal = list(order=c(2,0,0), period=52))
ts.ma=arima(ts.ts, order=c(2,0,1), seasonal = list(order=c(1,0,0), period=52))
pred_val =predict(ts.ma, 24)
# pred_val
rmse(banner_trend[["QLI"]][-(1:99)], as.vector(pred_val$se))
# 线性回归处理
# train_lm = train[[,-1]]
as.vector(train[,-1])
# pred_val
rmse(banner_trend[["QLI"]][-(1:99)], as.vector(pred_val$se))
